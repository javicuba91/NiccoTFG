@page
@model TFGPlastic.Web.Pages.TasksModel

@{
    ViewData["Title"] = "Tareas";
}
@using TFGPlastic.Core.Entity;
@using System;
@using System.IO;

@{
    string workspace = Request.Query["workspace"];
    var tasks = await ConexionPlastic.ListarTareas(workspace);
    int cantidad = tasks.Count;
}

<div class="text-center">
    <div class="row">
        <div class="col-lg-12">
            <h4>
                <i class="fa fa-folder"></i> WorkSpace: @workspace
            </h4>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-lg-4">
            <h6 >
                <i class="fa fa-folder"></i> Elementos
            </h6>
            <div class="container mt-5">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-header">
                                Listado de Elementos
                            </div>
                            <div class="card-body">
                                @Html.Raw(MostrarElementosRecursivamente("C:\\NicolasTFG_WS", 0))
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-8">
            <h6>
                <i class="fa fa-list"></i> Tareas
            </h6>

            <div class="container mt-5">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-header">

                                Listado de Tareas (@cantidad)
                            </div>
                            <div class="card-body">
                                <table class="table table-striped table-responsive">
                                    <thead>
                                        <tr>
                                            <td>Nombre Fichero</td>
                                            <td>Status</td>
                                            <td>Fecha</td>
                                            <td>Repositorio</td>
                                            <td>Propietario</td>
                                            <td>Opciones</td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            foreach (var task in tasks)
                                            {
                                                string ruta = task.ServerPath;
                                                int ultimaBarra = ruta.LastIndexOf('/');
                                                string nombreFichero = ruta.Substring(ultimaBarra + 1);

                                                <tr>
                                                    <td>@nombreFichero</td>
                                                    <td>
                                                        @string.Join(" - ", task.Changes)
                                                    </td>
                                                    <td>@task.LocalInfo.ModifiedTime.ToString("d-M-yyyy")</td>
                                                    <td>@task.RevisionInfo.RepositoryId.Id</td>
                                                    <td>@task.RevisionInfo.Owner.Name</td>
                                                    <td>
                                                        <div class="row">
                                                            @if (task.Changes.Any(change => change == "CP"))
                                                            {
                                                                <div class="col-lg-6">
                                                                    <a class="btn btn-success w-100" href="#"><i class="fa fa-check"></i></a>
                                                                </div>
                                                            }

                                                            <div class="col-lg-6">
                                                                <form method="post">
                                                                    <button class="btn btn-danger w-100" type="submit"><i class="fa fa-trash"></i></button>
                                                                </form>
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
   

</div>

@functions {
        // Función para mostrar elementos recursivamente
        object MostrarElementosRecursivamente(string carpeta, int nivel)
        {
            string[] archivos = Directory.GetFiles(carpeta);
            string[] subcarpetas = Directory.GetDirectories(carpeta);

                // Recorre las subcarpetas de forma recursiva
                foreach (var subcarpeta in subcarpetas)
                {
                    var carpetaActual = new DirectoryInfo(subcarpeta);
                    if ((carpetaActual.Attributes & FileAttributes.Hidden) == 0)
                    {
                        <span class="badge bg-primary"><i class="fa fa-folder"></i> @carpetaActual.Name</span><br />
                        MostrarElementosRecursivamente(subcarpeta, nivel + 1);
                    }

                }
            // Muestra los archivos de la carpeta actual
            foreach (var archivo in archivos)
            {
                string ficheros_nombre = new DirectoryInfo(archivo).Name;
            <span class="badge bg-success"><i class="fa fa-paperclip"></i> @ficheros_nombre</span>
            <br />
            }


        return null;
    }
}